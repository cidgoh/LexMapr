#!/usr/bin/env python3

import sys
import os
import argparse
import logging

import lexmapr.pipeline

logger = logging.getLogger("lexmapr")

script_name = os.path.basename(os.path.realpath(sys.argv[0]))

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('input_file',
                        help='Input csv file')
    parser.add_argument('-o', '--output', nargs='?',
                        help='Output file')
    parser.add_argument('log_file', nargs='?', default=sys.stderr,
                        help='Log file')
    parser.add_argument('-f', '--format', default='basic',
                        help='Output format')
    parser.add_argument('--version', action='store_true', dest='version',
                        help='Prints version information.', required=False)
    parser.add_argument('-w', '--web',
                        help="Fetch terms from this online ontology to map input file to.")
    parser.add_argument('-r', '--root',
                        help='Full IRI of root term to fetch underlying terms from. Requires '
                             '-w/--web to be specified.')
    args = parser.parse_args()

    if args.web is None and args.root is not None:
        parser.error('-r/--root can only be set when -w/--web is')
    
    if args.version:
        print(script_name + ' ' + __version__)
    else:
        lexmapr.pipeline.run(args)
